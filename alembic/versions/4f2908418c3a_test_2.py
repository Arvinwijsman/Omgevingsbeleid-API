"""test 2

Revision ID: 4f2908418c3a
Revises: 65a6bed26735
Create Date: 2022-04-29 21:33:43.442889

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = '4f2908418c3a'
down_revision = '65a6bed26735'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    create_seq("seq_Belangen")
    op.create_table('Belangen',
    sa.Column('UUID', mssql.UNIQUEIDENTIFIER(), server_default=sa.text('(newid())'), nullable=False),
    sa.Column('Begin_Geldigheid', sa.DateTime(), nullable=False),
    sa.Column('Eind_Geldigheid', sa.DateTime(), nullable=False),
    sa.Column('Created_Date', sa.DateTime(), nullable=False),
    sa.Column('Modified_Date', sa.DateTime(), nullable=False),
    sa.Column('Created_By', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Modified_By', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Titel', sa.Unicode(length=150), nullable=False),
    sa.Column('Omschrijving', sa.Unicode(), nullable=True),
    sa.Column('Weblink', sa.Unicode(), nullable=True),
    sa.Column('Type', sa.Unicode(), nullable=True),
    sa.Column('ID', sa.Integer(), server_default=sa.text('NEXT VALUE FOR [seq_Belangen]'), nullable=False),
    sa.ForeignKeyConstraint(['Created_By'], ['Gebruikers.UUID'], name=op.f('FK_Belangen_Created_By')),
    sa.ForeignKeyConstraint(['Modified_By'], ['Gebruikers.UUID'], name=op.f('FK_Belangen_Modified_By')),
    sa.PrimaryKeyConstraint('UUID', name=op.f('PK_Belangen'))
    )

    op.create_table('Beleidskeuze_Belangen',
    sa.Column('Beleidskeuze_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Belang_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Koppeling_Omschrijving', sa.String(collation='SQL_Latin1_General_CP1_CI_AS'), nullable=True),
    sa.ForeignKeyConstraint(['Belang_UUID'], ['Belangen.UUID'], name=op.f('FK_Beleidskeuze_Belangen_Belang_UUID')),
    sa.ForeignKeyConstraint(['Beleidskeuze_UUID'], ['Beleidskeuzes.UUID'], name=op.f('FK_Beleidskeuze_Belangen_Beleidskeuze_UUID')),
    sa.PrimaryKeyConstraint('Beleidskeuze_UUID', 'Belang_UUID', name=op.f('PK_Beleidskeuze_Belangen'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Beleidskeuze_Belangen')
    op.drop_table('Belangen')
    # ### end Alembic commands ###


def dialect_supports_sequences():
    return op._proxy.migration_context.dialect.supports_sequences


def dialect_supports_geometry_index():
    return op._proxy.migration_context.dialect.name == 'mssql'


def create_seq(name):
    if dialect_supports_sequences():
        op.execute(sa.schema.CreateSequence(sa.schema.Sequence(name)))


def drop_seq(name):
    if dialect_supports_sequences():
        op.execute(sa.schema.DropSequence(sa.schema.Sequence(name)))
