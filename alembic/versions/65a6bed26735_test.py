"""test

Revision ID: 65a6bed26735
Revises: 
Create Date: 2022-04-29 20:36:41.699512

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = '65a6bed26735'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    create_seq("seq_Gebruikers")
    op.create_table('Gebruikers',
    sa.Column('UUID', mssql.UNIQUEIDENTIFIER(), server_default=sa.text('(newid())'), nullable=False),
    sa.Column('Gebruikersnaam', sa.Unicode(length=50), nullable=False),
    sa.Column('Wachtwoord', sa.Unicode(), nullable=True),
    sa.Column('Rol', sa.Unicode(length=50), nullable=False),
    sa.Column('Email', sa.Unicode(length=265), nullable=True),
    sa.Column('Status', sa.Unicode(length=50), server_default=sa.text("('Actief')"), nullable=True),
    sa.Column('ID', sa.Integer(), server_default=sa.text('NEXT VALUE FOR [seq_Gebruikers]'), nullable=False),
    sa.PrimaryKeyConstraint('UUID', name=op.f('PK_Gebruikers'))
    )

    create_seq("seq_Ambities")
    op.create_table('Ambities',
    sa.Column('UUID', mssql.UNIQUEIDENTIFIER(), server_default=sa.text('(newid())'), nullable=False),
    sa.Column('Begin_Geldigheid', sa.DateTime(), nullable=False),
    sa.Column('Eind_Geldigheid', sa.DateTime(), nullable=False),
    sa.Column('Created_Date', sa.DateTime(), nullable=False),
    sa.Column('Modified_Date', sa.DateTime(), nullable=False),
    sa.Column('Titel', sa.Unicode(length=150), nullable=False),
    sa.Column('Omschrijving', sa.Unicode(), nullable=True),
    sa.Column('Weblink', sa.Unicode(), nullable=True),
    sa.Column('ID', sa.Integer(), server_default=sa.text('NEXT VALUE FOR [seq_Ambities]'), nullable=False),
    sa.Column('Created_By', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Modified_By', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.ForeignKeyConstraint(['Created_By'], ['Gebruikers.UUID'], name=op.f('FK_Ambities_Created_By')),
    sa.ForeignKeyConstraint(['Modified_By'], ['Gebruikers.UUID'], name=op.f('FK_Ambities_Modified_By')),
    sa.PrimaryKeyConstraint('UUID', name=op.f('PK_Ambities'))
    )

    create_seq("seq_Beleidskeuzes")
    op.create_table('Beleidskeuzes',
    sa.Column('UUID', mssql.UNIQUEIDENTIFIER(), server_default=sa.text('(newid())'), nullable=False),
    sa.Column('Begin_Geldigheid', sa.DateTime(), nullable=False),
    sa.Column('Eind_Geldigheid', sa.DateTime(), nullable=False),
    sa.Column('Created_Date', sa.DateTime(), nullable=False),
    sa.Column('Modified_Date', sa.DateTime(), nullable=False),
    sa.Column('Eigenaar_1', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Eigenaar_2', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Portefeuillehouder_1', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Portefeuillehouder_2', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Opdrachtgever', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Titel', sa.Unicode(), nullable=False),
    sa.Column('Omschrijving_Keuze', sa.Unicode(), nullable=True),
    sa.Column('Omschrijving_Werking', sa.Unicode(), nullable=True),
    sa.Column('Provinciaal_Belang', sa.Unicode(), nullable=True),
    sa.Column('Aanleiding', sa.Unicode(), nullable=True),
    sa.Column('Afweging', sa.Unicode(), nullable=True),
    sa.Column('Besluitnummer', sa.Unicode(), nullable=True),
    sa.Column('Tags', sa.Unicode(), nullable=True),
    sa.Column('Aanpassing_Op', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Status', sa.Unicode(length=50), nullable=False),
    sa.Column('Weblink', sa.Unicode(length=200), nullable=True),
    sa.Column('ID', sa.Integer(), server_default=sa.text('NEXT VALUE FOR [seq_Beleidskeuzes]'), nullable=False),
    sa.Column('Created_By', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Modified_By', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.ForeignKeyConstraint(['Aanpassing_Op'], ['Beleidskeuzes.UUID'], name=op.f('FK_Beleidskeuzes_Aanpassing_Op')),
    sa.ForeignKeyConstraint(['Created_By'], ['Gebruikers.UUID'], name=op.f('FK_Beleidskeuzes_Created_By')),
    sa.ForeignKeyConstraint(['Eigenaar_1'], ['Gebruikers.UUID'], name=op.f('FK_Beleidskeuzes_Eigenaar_1')),
    sa.ForeignKeyConstraint(['Eigenaar_2'], ['Gebruikers.UUID'], name=op.f('FK_Beleidskeuzes_Eigenaar_2')),
    sa.ForeignKeyConstraint(['Modified_By'], ['Gebruikers.UUID'], name=op.f('FK_Beleidskeuzes_Modified_By')),
    sa.ForeignKeyConstraint(['Opdrachtgever'], ['Gebruikers.UUID'], name=op.f('FK_Beleidskeuzes_Opdrachtgever')),
    sa.ForeignKeyConstraint(['Portefeuillehouder_1'], ['Gebruikers.UUID'], name=op.f('FK_Beleidskeuzes_Portefeuillehouder_1')),
    sa.ForeignKeyConstraint(['Portefeuillehouder_2'], ['Gebruikers.UUID'], name=op.f('FK_Beleidskeuzes_Portefeuillehouder_2')),
    sa.PrimaryKeyConstraint('UUID', name=op.f('PK_Beleidskeuzes'))
    )

    create_seq("seq_Beleidsmodules")
    op.create_table('Beleidsmodules',
    sa.Column('UUID', mssql.UNIQUEIDENTIFIER(), server_default=sa.text('(newid())'), nullable=False),
    sa.Column('Begin_Geldigheid', sa.DateTime(), nullable=False),
    sa.Column('Eind_Geldigheid', sa.DateTime(), nullable=False),
    sa.Column('Created_Date', sa.DateTime(), nullable=False),
    sa.Column('Modified_Date', sa.DateTime(), nullable=False),
    sa.Column('Titel', sa.Unicode(length=150), nullable=False),
    sa.Column('Besluit_Datum', sa.DateTime(), nullable=True),
    sa.Column('ID', sa.Integer(), server_default=sa.text('NEXT VALUE FOR [seq_Beleidsmodules]'), nullable=False),
    sa.Column('Created_By', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Modified_By', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.ForeignKeyConstraint(['Created_By'], ['Gebruikers.UUID'], name=op.f('FK_Beleidsmodules_Created_By')),
    sa.ForeignKeyConstraint(['Modified_By'], ['Gebruikers.UUID'], name=op.f('FK_Beleidsmodules_Modified_By')),
    sa.PrimaryKeyConstraint('UUID', name=op.f('PK_Beleidsmodules'))
    )

    create_seq("seq_Maatregelen")
    op.create_table('Maatregelen',
    sa.Column('UUID', mssql.UNIQUEIDENTIFIER(), server_default=sa.text('(newid())'), nullable=False),
    sa.Column('Begin_Geldigheid', sa.DateTime(), nullable=False),
    sa.Column('Eind_Geldigheid', sa.DateTime(), nullable=False),
    sa.Column('Created_Date', sa.DateTime(), nullable=False),
    sa.Column('Modified_Date', sa.DateTime(), nullable=False),
    sa.Column('Titel', sa.Unicode(), nullable=False),
    sa.Column('Omschrijving', sa.Unicode(), nullable=True),
    sa.Column('Toelichting', sa.Unicode(), nullable=True),
    sa.Column('Toelichting_Raw', sa.Unicode(), nullable=True),
    sa.Column('Weblink', sa.Unicode(), nullable=True),
    sa.Column('Status', sa.Unicode(length=50), nullable=True),
    sa.Column('Gebied_Duiding', sa.Unicode(), nullable=True),
    sa.Column('Tags', sa.Unicode(), nullable=True),
    sa.Column('Aanpassing_Op', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Eigenaar_1', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Eigenaar_2', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Portefeuillehouder_1', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Portefeuillehouder_2', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('Opdrachtgever', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('ID', sa.Integer(), server_default=sa.text('NEXT VALUE FOR [seq_Maatregelen]'), nullable=False),
    sa.Column('Created_By', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Modified_By', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.ForeignKeyConstraint(['Aanpassing_Op'], ['Maatregelen.UUID'], name=op.f('FK_Maatregelen_Aanpassing_Op')),
    sa.ForeignKeyConstraint(['Created_By'], ['Gebruikers.UUID'], name=op.f('FK_Maatregelen_Created_By')),
    sa.ForeignKeyConstraint(['Eigenaar_1'], ['Gebruikers.UUID'], name=op.f('FK_Maatregelen_Eigenaar_1')),
    sa.ForeignKeyConstraint(['Eigenaar_2'], ['Gebruikers.UUID'], name=op.f('FK_Maatregelen_Eigenaar_2')),
    sa.ForeignKeyConstraint(['Modified_By'], ['Gebruikers.UUID'], name=op.f('FK_Maatregelen_Modified_By')),
    sa.ForeignKeyConstraint(['Opdrachtgever'], ['Gebruikers.UUID'], name=op.f('FK_Maatregelen_Opdrachtgever')),
    sa.ForeignKeyConstraint(['Portefeuillehouder_1'], ['Gebruikers.UUID'], name=op.f('FK_Maatregelen_Portefeuillehouder_1')),
    sa.ForeignKeyConstraint(['Portefeuillehouder_2'], ['Gebruikers.UUID'], name=op.f('FK_Maatregelen_Portefeuillehouder_2')),
    sa.PrimaryKeyConstraint('UUID', name=op.f('PK_Maatregelen'))
    )

    op.create_table('Beleidskeuze_Ambities',
    sa.Column('Beleidskeuze_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Ambitie_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Koppeling_Omschrijving', sa.String(collation='SQL_Latin1_General_CP1_CI_AS'), nullable=True),
    sa.ForeignKeyConstraint(['Ambitie_UUID'], ['Ambities.UUID'], name=op.f('FK_Beleidskeuze_Ambities_Ambitie_UUID')),
    sa.ForeignKeyConstraint(['Beleidskeuze_UUID'], ['Beleidskeuzes.UUID'], name=op.f('FK_Beleidskeuze_Ambities_Beleidskeuze_UUID')),
    sa.PrimaryKeyConstraint('Beleidskeuze_UUID', 'Ambitie_UUID', name=op.f('PK_Beleidskeuze_Ambities'))
    )

    op.create_table('Beleidskeuze_Maatregelen',
    sa.Column('Beleidskeuze_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Maatregel_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Koppeling_Omschrijving', sa.String(collation='SQL_Latin1_General_CP1_CI_AS'), nullable=True),
    sa.ForeignKeyConstraint(['Beleidskeuze_UUID'], ['Beleidskeuzes.UUID'], name=op.f('FK_Beleidskeuze_Maatregelen_Beleidskeuze_UUID')),
    sa.ForeignKeyConstraint(['Maatregel_UUID'], ['Maatregelen.UUID'], name=op.f('FK_Beleidskeuze_Maatregelen_Maatregel_UUID')),
    sa.PrimaryKeyConstraint('Beleidskeuze_UUID', 'Maatregel_UUID', name=op.f('PK_Beleidskeuze_Maatregelen'))
    )
    
    op.create_table('Beleidsmodule_Beleidskeuzes',
    sa.Column('Beleidsmodule_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Beleidskeuze_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Koppeling_Omschrijving', sa.String(collation='SQL_Latin1_General_CP1_CI_AS'), nullable=True),
    sa.ForeignKeyConstraint(['Beleidskeuze_UUID'], ['Beleidskeuzes.UUID'], name=op.f('FK_Beleidsmodule_Beleidskeuzes_Beleidskeuze_UUID')),
    sa.ForeignKeyConstraint(['Beleidsmodule_UUID'], ['Beleidsmodules.UUID'], name=op.f('FK_Beleidsmodule_Beleidskeuzes_Beleidsmodule_UUID')),
    sa.PrimaryKeyConstraint('Beleidsmodule_UUID', 'Beleidskeuze_UUID', name=op.f('PK_Beleidsmodule_Beleidskeuzes'))
    )
    
    op.create_table('Beleidsmodule_Maatregelen',
    sa.Column('Beleidsmodule_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Maatregel_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('Koppeling_Omschrijving', sa.String(collation='SQL_Latin1_General_CP1_CI_AS'), nullable=True),
    sa.ForeignKeyConstraint(['Beleidsmodule_UUID'], ['Beleidsmodules.UUID'], name=op.f('FK_Beleidsmodule_Maatregelen_Beleidsmodule_UUID')),
    sa.ForeignKeyConstraint(['Maatregel_UUID'], ['Maatregelen.UUID'], name=op.f('FK_Beleidsmodule_Maatregelen_Maatregel_UUID')),
    sa.PrimaryKeyConstraint('Beleidsmodule_UUID', 'Maatregel_UUID', name=op.f('PK_Beleidsmodule_Maatregelen'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Beleidsmodule_Maatregelen')
    op.drop_table('Beleidsmodule_Beleidskeuzes')
    op.drop_table('Beleidskeuze_Maatregelen')
    op.drop_table('Beleidskeuze_Ambities')
    op.drop_table('Maatregelen')
    op.drop_table('Beleidsmodules')
    op.drop_table('Beleidskeuzes')
    op.drop_table('Ambities')
    op.drop_table('Gebruikers')
    # ### end Alembic commands ###


def dialect_supports_sequences():
    return op._proxy.migration_context.dialect.supports_sequences


def dialect_supports_geometry_index():
    return op._proxy.migration_context.dialect.name == 'mssql'


def create_seq(name):
    if dialect_supports_sequences():
        op.execute(sa.schema.CreateSequence(sa.schema.Sequence(name)))


def drop_seq(name):
    if dialect_supports_sequences():
        op.execute(sa.schema.DropSequence(sa.schema.Sequence(name)))
